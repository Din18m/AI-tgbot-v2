"""
–ù–∞—á–∞–ª—å–Ω—ã–π –±–ª–æ–∫
"""
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, Message

from config import dp
from const import INFO_TEXT, HELLO, START_MESSAGE
from db.db_student import  check_student_id
from db.db_teacher import check_id
from start.keyboard import info_and_continue_kb, student_registration_kb, starting_kb


@dp.callback_query(lambda c: c.data == "start")
async def process_callback(callback_query: CallbackQuery, state: FSMContext):
    user, i = check_id(callback_query.from_user.id)
    if i == 0:
        kb = [
            [
                InlineKeyboardButton(text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data="registration"),
            ]]

        keyboard = InlineKeyboardMarkup(inline_keyboard=kb)
        await callback_query.message.edit_text("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", reply_markup=keyboard)
    else:
        kb = [
            [
                InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", callback_data="registration"),
            ],
            [
                InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="setting_teacher"),
            ],
            [
                InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞", callback_data="new_students_teacher"),
            ],
            [
                InlineKeyboardButton(text="–õ—é–¥–∏ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞—Ç—å", callback_data="my_students_teacher"),
            ],
            [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="return_to_start")]
        ]

        keyboard = InlineKeyboardMarkup(inline_keyboard=kb)
        await callback_query.message.edit_text(
            HELLO.format(user.name, user.grade, user.sphere, user.description),
            reply_markup=keyboard)


@dp.callback_query(lambda c: c.data == "return_to_start")
async def cmd_start(callback_query: CallbackQuery):
    kb = [
        [InlineKeyboardButton(text="–•–æ—á—É –ø—Ä–æ–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ", callback_data="start_student")],
        [InlineKeyboardButton(text="–•–æ—á—É –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ", callback_data="start")],
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)
    await callback_query.message.edit_text(START_MESSAGE, reply_markup=keyboard)



@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(START_MESSAGE, reply_markup=starting_kb())



@dp.callback_query(lambda c: c.data == "start_student")
async def student_info(callback_query: CallbackQuery, state: FSMContext):
    user, i = await check_student_id(callback_query.from_user.id)
    if i == 0:
        await callback_query.message.edit_text("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", reply_markup=student_registration_kb())
    else:
        DATA = HELLO + INFO_TEXT
        await callback_query.message.edit_text(
            DATA.format(user["name"], user["grade"], user["sphere"], user["description"]),
            reply_markup=info_and_continue_kb())


